name: Build and Deploy Portfolio API

on:
  push:
    branches: ["feature/aws-ec2-cicd"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build & Push Docker image
        run: |
          IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}
          GIT_SHA=$(git rev-parse --short HEAD)

          docker buildx build \
            --platform linux/amd64 \
            -t $IMAGE_URI:$GIT_SHA \
            -t $IMAGE_URI:latest \
            --push .

      - name: Cancel any existing instance refresh
        run: |
          aws autoscaling cancel-instance-refresh \
            --auto-scaling-group-name "${{ secrets.ASG_NAME }}" || true

      - name: Wait for refresh to cancel
        run: |
          while true; do
          STATUS=$(aws autoscaling describe-instance-refreshes \
          --auto-scaling-group-name "${{ secrets.ASG_NAME }}" \
          --query 'InstanceRefreshes[0].Status' --output text)

          if [ "$STATUS" = "Cancelled" ] || [ "$STATUS" = "None" ] || [ "$STATUS" = "Successful" ]; then
          echo "No refresh in progress (status: $STATUS)."
          break
          fi

          echo "Waiting for cancel... current status: $STATUS"
          sleep 10
          done

      - name: Start new instance refresh
        run: |
          aws autoscaling start-instance-refresh \
            --auto-scaling-group-name "${{ secrets.ASG_NAME }}" \
            --strategy Rolling \
            --preferences '{"MinHealthyPercentage": 50, "InstanceWarmup": 120}'
